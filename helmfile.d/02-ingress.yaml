# Cert Manager ====================================================================
# Automates getting TLS certs from local CA or Letsencrypt

# NOTE: cli args take precedence over these
helmDefaults:
  wait: true
  timeout: 600
  recreatePods: true
  force: true

releases:
  - name: ingress-nginx
    namespace: ingress
    chart: stable/nginx-ingress
    values:
      - controller:
          stats:
            enabled: true
          metrics:
            enabled: true
          service:
            type: NodePort
            labels:
              app.kubernetes.io/name: default-http-backend
              app.kubernetes.io/part-of: ingress-nginx
            externalIPs:
              - {{ requiredEnv "MASTER_IP" }}

  - name: cert-manager
    namespace: ingress
    chart: stable/cert-manager
    hooks:
      # Install the custom CRDs
      - events: ["prepare"]
        command: "kubectl"
        args: ["apply", "-f", "https://raw.githubusercontent.com/jetstack/cert-manager/release-0.6/deploy/manifests/00-crds.yaml"]
      # Make sure that the namespace doesn't have tls validation enabled to allow cert manager to install itself
#      - events: ["prepare"]
#        command: "kubectl"
#        args: ["label", "namespace", "ingress", "certmanager.k8s.io/disable-validation=true",]

  - name: ca-issuer
    namespace: ingress
    chart: ../charts/cert-manager-setup

#  In order to begin issuing certificates, you will need to set up a ClusterIssuer
#  or Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).
#
#  More information on the different types of issuers and how to configure them
#can be found in our documentation:
#
#  https://cert-manager.readthedocs.io/en/latest/reference/issuers.html
#
#  For information on how to configure cert-manager to automatically provision
#  Certificates for Ingress resources, take a look at the `ingress-shim`
#documentation:
#
#  https://cert-manager.readthedocs.io/en/latest/reference/ingress-shim.html
