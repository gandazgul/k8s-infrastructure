# Seedbox ===========================================================
# Transmission and flexget running over an OpenVPN connection ;)

# NOTE: cli args take precedence over these
helmDefaults:
  wait: true
  timeout: 600
  force: true

# For the VPN port forward and transmission automation to work add this to the conf
# run up.sh when the connection is set up
#script-security 2
#up /vpn/up.sh
#
# The scripts for up.sh and port-forward.sh are in this repo along with the Dockerfile for the vpn container
# Copy these scripts to configs/openvpn on yasr.

releases:
  - name: seedbox
    namespace: default
    chart: ../charts/seedbox
    values:
      - transmission:
          ingress:
            enabled: true
            hosts:
              - host: transmission.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
                servicePort: trans-http
            tls:
              - hosts:
                  - transmission.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
                secretName: transmission-k8s-cert
            annotations:
              kubernetes.io/ingress.class: "nginx"
              cert-manager.io/cluster-issuer: "ca-issuer"
              nginx.ingress.kubernetes.io/app-root: "/web/"
      - flexget:
          env:
            - name: MAIL_TO
              value: {{ requiredEnv "MAIL_TO" }}
            - name: FG_WEBUI_PASSWD
              value: {{ requiredEnv "ADMIN_PASSWORD" }}
          volumeMounts:
            - name: yasr-volume
              mountPath: "/config"
              subPath: "configs/flexget"
            - name: main-volume
              mountPath: "/main"
            - name: yasr-volume
              mountPath: "/data"
              subPath: "configs/transmission"
            - name: tz-config
              mountPath: /etc/localtime
              readOnly: true
          ingress:
            enabled: true
            hosts:
              - host: flexget.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
                servicePort: flexget-http
            tls:
              - hosts:
                  - flexget.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
                secretName: flexget-k8s-cert
            annotations:
              kubernetes.io/ingress.class: "nginx"
              cert-manager.io/cluster-issuer: "ca-issuer"
      - jackett:
          ingress:
            enabled: true
            hosts:
            - host: jackett.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
              servicePort: jackett-http
            tls:
            - hosts:
              - jackett.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
              secretName: jackett-k8s-cert
            annotations:
              kubernetes.io/ingress.class: "nginx"
              cert-manager.io/cluster-issuer: "ca-issuer"
      - sonarr:
          ingress:
            enabled: true
            hosts:
            - host: sonarr.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
              servicePort: sonarr-http
            tls:
            - hosts:
              - sonarr.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
              secretName: sonarr-k8s-cert
            annotations:
              kubernetes.io/ingress.class: "nginx"
              cert-manager.io/cluster-issuer: "ca-issuer"
      - radarr:
          ingress:
            enabled: true
            hosts:
            - host: radarr.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
              servicePort: radarr-http
            tls:
            - hosts:
              - radarr.{{ requiredEnv "INGRESS_INTERNAL_NAME" }}
              secretName: radarr-k8s-cert
            annotations:
              kubernetes.io/ingress.class: "nginx"
              cert-manager.io/cluster-issuer: "ca-issuer"
      - values/seedbox.yaml
