# Ingress, Cert Manager and Cert Issuers ====================================================================
# Cert manager automates getting TLS certs from local CA or Letsencrypt

# NOTE: cli args take precedence over these
helmDefaults:
  wait: true
  timeout: 600
  force: true

repositories:
  #  official repo for cert-manager
  - name: jetstack
    url: https://charts.jetstack.io

releases:
  - name: ingress-nginx
    namespace: ingress
    chart: stable/nginx-ingress
    values:
      - tcp:
          2222: "default/gogs-gogs:gogs-ssh" # for gogs find a better way to do this
      - controller:
          stats:
            enabled: true
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "10254"
          service:
            type: NodePort
            labels:
              app.kubernetes.io/name: default-http-backend
              app.kubernetes.io/part-of: ingress-nginx
            externalIPs:
              - {{ requiredEnv "MASTER_IP" }}

  - name: cert-manager
    namespace: ingress
    chart: jetstack/cert-manager
    hooks:
      # Install the custom CRDs
      # kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.11/deploy/manifests/00-crds.yaml
      - events: ["prepare"]
        command: "kubectl"
        args: ["apply", "--validate=false", "-f", "https://github.com/jetstack/cert-manager/releases/download/v1.0.4/cert-manager.crds.yaml"]
      # Make sure that the namespace doesn't have tls validation enabled to allow cert manager to install itself
      # kubectl label namespace ingress cert-manager.io/disable-validation=true --overwrite
  #      - events: ["prepare"]
  #        command: "kubectl"
  #        args: ["label", "namespace", "ingress", "cert-manager.io/disable-validation=true", "--overwrite"]

  - name: ca-issuer
    namespace: ingress
    chart: ../charts/cert-manager-setup
    values:
      - letsencrypt:
          enabled: true
          email: {{ requiredEnv "MAIL_TO" }}

#To manually get a cert use this:
#apiVersion: cert-manager.io/v1alpha2
#kind: Certificate
#metadata:
#  name: test-cert-manager-certificate
#  namespace: default
#spec:
#  acme:
#    config:
#      - domains:
#          - cert-manager.k8s.sytes.net
#        http01: {}
#  issuerRef:
#    kind: ClusterIssuer
#    # Use one of these
#    name: ca-issuer
#    #name: letsencrypt-staging
#    #name: letsencrypt-prod
#  secretName: test-cert-manager-secret
