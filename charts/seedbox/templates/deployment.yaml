apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helpers.fullname" . }}
  labels:
    app: {{ include "helpers.name" . }}
    chart: {{ include "helpers.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "helpers.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "helpers.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- with .Values.volumes }}
      volumes:
{{ toYaml . | nindent 6 }}
      {{- end}}
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      containers:
        # VPN
        - name: {{ .Values.vpn.name | quote }}
          image: "{{ .Values.vpn.image.name }}:{{ .Values.vpn.image.tag }}"
          imagePullPolicy: {{ .Values.vpn.image.pullPolicy | quote }}
          env:
            {{- with .Values.vpn.env }}
{{ toYaml . | nindent 12 }}
            {{- end}}
            - name: PORT_FORWARDING
              value: "on"
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          resources:
            limits:
              cpu: {{ default "50m" .Values.vpn.resources.limits.cpu | quote }}
              memory: {{ default "50Mi" .Values.vpn.resources.limits.memory | quote }}
            requests:
              cpu: {{ default "50m" .Values.vpn.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.vpn.resources.requests.memory | quote }}
          volumeMounts:
{{ toYaml .Values.vpn.volumeMounts | indent 12 }}
        # Transmission
        - name: {{ .Values.transmission.name }}
          image: "{{ .Values.transmission.image.name }}:{{ .Values.transmission.image.tag }}"
          imagePullPolicy: {{ .Values.transmission.image.pullPolicy | quote }}
          {{- with .Values.transmission.env }}
          env:
{{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            limits:
              cpu: {{ default "50m" .Values.transmission.resources.limits.cpu | quote }}
              memory: {{ .Values.transmission.resources.limits.memory | default "50Mi" | quote }}
            requests:
              cpu: {{ default "50m" .Values.transmission.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.transmission.resources.requests.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: trans-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: trans-http
            timeoutSeconds: 2
          volumeMounts:
{{ toYaml .Values.transmission.volumeMounts | indent 12 }}
          ports:
            - name: trans-http
              containerPort: 9091
              protocol: TCP
        # flexget
{{- if .Values.flexget.enabled }}
        - name: {{ .Values.flexget.name | quote }}
          image: "{{ .Values.flexget.image.name }}:{{ .Values.flexget.image.tag }}"
          imagePullPolicy: {{ .Values.flexget.image.pullPolicy | quote }}
          {{- with .Values.flexget.env }}
          env:
{{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            limits:
              cpu: {{ default "50m" .Values.flexget.resources.limits.cpu | quote }}
              memory: {{ default "50Mi" .Values.flexget.resources.limits.memory | quote }}
            requests:
              cpu: {{ default "50m" .Values.flexget.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.flexget.resources.requests.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: flexget-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: flexget-http
            timeoutSeconds: 2
          volumeMounts:
{{ toYaml .Values.flexget.volumeMounts | indent 12 }}
          ports:
            - name: flexget-http
              containerPort: 3539
              protocol: TCP
{{- end}}
        # Jackett
{{- if .Values.jackett.enabled }}
        - name: {{ .Values.jackett.name | quote }}
          image: "{{ .Values.jackett.image.name }}:{{ .Values.jackett.image.tag }}"
          imagePullPolicy: {{ .Values.jackett.image.pullPolicy | quote }}
          {{- with .Values.jackett.env }}
          env:
{{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            limits:
              cpu: {{ default "50m" .Values.jackett.resources.limits.cpu | quote }}
              memory: {{ default "50Mi" .Values.jackett.resources.limits.memory | quote }}
            requests:
              cpu: {{ default "50m" .Values.jackett.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.jackett.resources.requests.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: jackett-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: jackett-http
            timeoutSeconds: 2
          volumeMounts:
{{ toYaml .Values.jackett.volumeMounts | indent 12 }}
          ports:
          - name: jackett-http
            containerPort: 9117
            protocol: TCP
{{- end}}
        # Sonarr
{{- if .Values.sonarr.enabled }}
        - name: {{ .Values.sonarr.name | quote }}
          image: "{{ .Values.sonarr.image.name }}:{{ .Values.sonarr.image.tag }}"
          imagePullPolicy: {{ .Values.sonarr.image.pullPolicy | quote }}
          {{- with .Values.sonarr.env }}
          env:
{{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            limits:
              cpu: {{ default "50m" .Values.sonarr.resources.limits.cpu | quote }}
              memory: {{ default "50Mi" .Values.sonarr.resources.limits.memory | quote }}
            requests:
              cpu: {{ default "50m" .Values.sonarr.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.sonarr.resources.requests.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: sonarr-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: sonarr-http
            timeoutSeconds: 2
          volumeMounts:
{{ toYaml .Values.sonarr.volumeMounts | indent 12 }}
          ports:
          - name: sonarr-http
            containerPort: 8989
            protocol: TCP
{{- end}}
        # radarr
{{- if .Values.radarr.enabled }}
        - name: {{ .Values.radarr.name | quote }}
          image: "{{ .Values.radarr.image.name }}:{{ .Values.radarr.image.tag }}"
          imagePullPolicy: {{ .Values.radarr.image.pullPolicy | quote }}
          {{- with .Values.radarr.env }}
          env:
{{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            limits:
              cpu: {{ default "50m" .Values.radarr.resources.limits.cpu | quote }}
              memory: {{ default "50Mi" .Values.radarr.resources.limits.memory | quote }}
            requests:
              cpu: {{ default "50m" .Values.radarr.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.radarr.resources.requests.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: radarr-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: radarr-http
            timeoutSeconds: 2
          volumeMounts:
{{ toYaml .Values.radarr.volumeMounts | indent 12 }}
          ports:
          - name: radarr-http
            containerPort: 7878
            protocol: TCP
{{- end}}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
