apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helpers.fullname" . }}
  labels: {{- include "helpers.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "helpers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "helpers.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.volumes }}
      volumes: {{ toYaml . | nindent 6 }}
      {{- end}}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig: {{ toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      containers:
{{- if .Values.vpn.enabled }}
        # VPN
        - name: {{ .Values.vpn.name | quote }}
          image: "{{ .Values.vpn.image.name }}:{{ .Values.vpn.image.tag }}"
          imagePullPolicy: {{ .Values.vpn.image.pullPolicy | quote }}
          env:
            {{- with .Values.vpn.env }}
              {{ toYaml . | nindent 12 }}
            {{- end}}
            - name: PORT_FORWARDING
              value: "on"
            - name: HTTPPROXY
              value: "off"
            - name: SHADOWSOCKS
              value: "off"
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - '[ "$(curl -s https://ifconfig.co/city)" != "Toronto" ]'
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 2
          resources:
            requests:
              cpu: {{ .Values.vpn.resources.requests.cpu | quote }}
              memory: {{ .Values.vpn.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.vpn.resources.limits.cpu | quote }}
              memory: {{ .Values.vpn.resources.limits.memory | quote }}
          {{- with .Values.vpn.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
        # Transmission
        - name: transmission-pia-port-forward
          image: "gandazgul/transmission-pia-port-forward:v318a599"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 50Mi
          {{- with .Values.transmission.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
        - name: {{ .Values.transmission.name }}
          image: "{{ .Values.transmission.image.name }}:{{ .Values.transmission.image.tag }}"
          imagePullPolicy: {{ .Values.transmission.image.pullPolicy | quote }}
          {{- with .Values.transmission.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            requests:
              cpu: {{ .Values.transmission.resources.requests.cpu | quote }}
              memory: {{ .Values.transmission.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.transmission.resources.limits.cpu | quote }}
              memory: {{ .Values.transmission.resources.limits.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.transmission.service.port }}
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: {{ .Values.transmission.service.port }}
            timeoutSeconds: 2
          {{- with .Values.transmission.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
          - name: trs-http
            containerPort: {{ .Values.transmission.service.port }}
            protocol: TCP
          {{- range .Values.transmission.service.additionalPorts }}
          - name: {{ .name }}
            containerPort: {{ .port }}
            protocol: {{ .protocol }}
          {{- end }}
        # flexget
{{- if .Values.flexget.enabled }}
        - name: {{ .Values.flexget.name | quote }}
          image: "{{ .Values.flexget.image.name }}:{{ .Values.flexget.image.tag }}"
          imagePullPolicy: {{ .Values.flexget.image.pullPolicy | quote }}
          {{- with .Values.flexget.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            requests:
              cpu: {{ default "50m" .Values.flexget.resources.requests.cpu | quote }}
              memory: {{ default "50Mi" .Values.flexget.resources.requests.memory | quote }}
            limits:
              cpu: {{ default "50m" .Values.flexget.resources.limits.cpu | quote }}
              memory: {{ default "50Mi" .Values.flexget.resources.limits.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: flexget-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: flexget-http
            timeoutSeconds: 2
          {{- with .Values.flexget.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: flexget-http
              containerPort: {{ .Values.flexget.service.port }}
              protocol: TCP
{{- end}}
        # Jackett
{{- if .Values.jackett.enabled }}
        - name: {{ .Values.jackett.name | quote }}
          image: "{{ .Values.jackett.image.name }}:{{ .Values.jackett.image.tag }}"
          imagePullPolicy: {{ .Values.jackett.image.pullPolicy | quote }}
          {{- with .Values.jackett.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            requests:
              cpu: {{ .Values.jackett.resources.requests.cpu | quote }}
              memory: {{ .Values.jackett.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.jackett.resources.limits.cpu | quote }}
              memory: {{ .Values.jackett.resources.limits.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: jackett-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: jackett-http
            timeoutSeconds: 2
          {{- with .Values.jackett.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
          - name: jackett-http
            containerPort: {{ .Values.jackett.service.port }}
            protocol: TCP
{{- end}}
        # Sonarr
{{- if .Values.sonarr.enabled }}
        - name: {{ .Values.sonarr.name | quote }}
          image: "{{ .Values.sonarr.image.name }}:{{ .Values.sonarr.image.tag }}"
          imagePullPolicy: {{ .Values.sonarr.image.pullPolicy | quote }}
          {{- with .Values.sonarr.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            requests:
              cpu: {{ .Values.sonarr.resources.requests.cpu | quote }}
              memory: {{ .Values.sonarr.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.sonarr.resources.limits.cpu | quote }}
              memory: {{ .Values.sonarr.resources.limits.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: sonarr-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: sonarr-http
            timeoutSeconds: 2
          {{- with .Values.sonarr.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
          - name: sonarr-http
            containerPort: {{ .Values.sonarr.service.port }}
            protocol: TCP
{{- end}}
        # radarr
{{- if .Values.radarr.enabled }}
        - name: {{ .Values.radarr.name | quote }}
          image: "{{ .Values.radarr.image.name }}:{{ .Values.radarr.image.tag }}"
          imagePullPolicy: {{ .Values.radarr.image.pullPolicy | quote }}
          {{- with .Values.radarr.env }}
          env: {{ toYaml . | nindent 12 }}
          {{- end}}
          resources:
            requests:
              cpu: {{ .Values.radarr.resources.requests.cpu | quote }}
              memory: {{ .Values.radarr.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.radarr.resources.limits.cpu | quote }}
              memory: {{ .Values.radarr.resources.limits.memory | quote }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: radarr-http
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: radarr-http
            timeoutSeconds: 2
          {{- with .Values.radarr.volumeMounts }}
          volumeMounts: {{ toYaml . | nindent 12 }}
          {{- end }}
          ports:
          - name: radarr-http
            containerPort: {{ .Values.radarr.service.port }}
            protocol: TCP
{{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
